def Idel():
    i = 0
    while i != len(value):  # Вычисляем пользователя с схожими интересами.
        if value[i] == max(value):
            idel = nameL[valueId[i]]  # Имя.
            idelM = markH[valueId[i]]  # Оценки фильмов.
        i += 1
    i = 0
    while i != len(idelM):
        if idelM[i] == str(max(idelM)):  # Получи айди понравившихся фильмов.
            idelF.append(i)
        i += 1
    return idel # Вернем имя пользователя с схожими интересами.

def Value(markL):
    l = 0
    for i in markL:
        if markL[id] != i:  # Вычисляем расстояния каждого пользователя.
            o = 0
            timeK = 0
            j = 0
            a = str(markL[id])  # Текущий пользователь.
            while j != len(a):
                far.append(((int(a[j]) + newK1[o] - int(str(i)[j])) + newK1[
                    o]) ** 2)  # (а-b)**2 вот только от классической формулы пифагора наша прибавляет к a и b коефииент. Теперь она выглядет так: ((a+k)-(b+k))**2 коефициент у каждого пользователя свой!
                j += 1
            value.append(Far(far))  # Обработай и запиши значение.
            valueId.append(l)  # Добавь их айди.
            o += 1
        l += 1

def Sr(): # Найдем коефициент.
    for i in k:
        if i > nameK: # Если среднее арифметическое выбранного пользователя больше текущего.
            newK1.append((i-nameK)/len(markL[0])) # Дели (выбранного пользователя - текущего) на количество жанров.
        if i < nameK: # Если среднее арифметическое текущего пользователя больше выбранного.
            newK.append((nameK-i)/len(markL[0])) # Дели (текущего - выбранного пользователя) на количество жанров.
    if newK < newK1: # Если количество делений в списке выбранного пользователя больше текущего.
        newK.append(0*(len(newK1)-len(newK))) # Добавь в недостающий список нулей.
    if newK > newK1: # Если количество делений в списке текущего пользователя больше выбранного.
        newK1.append(0*(len(newK)-len(newK1))) # Добавь в недостающий список нулей.

def Arithmetic(mark,nameK): # Узнаем среднее арифметическое каждого из пользователей.
    l = 0
    for i in mark:
        if mark[id] != i:
            timeK = 0
            j = 0
            a = str(mark[id]) # Текущий пользователь.
            while j != len(a):
                if l == 0:
                    nameK += int(a[j]) # Просуммируй все оценки жанров текущего пользователя.
                timeK += int(str(i)[j]) # Просуммируй все оценки жанров оставшихся пользователей.
                j += 1
            k.append(timeK)
        l += 1

def Far(far): # Изучаем расстояние между двумя объектами.
    l = 0
    i = 0
    while i != len(far):
        l += far[i] # Просуммируй обработанные числа.
        i += 1
    return l**0.5 # Возведи их в корень и верни обратно.

def Log(text):
    file = open("memory.txt", "r", encoding="UTF-8")
    read = file.read()
    if text in read: # Читаем файл, если в нем уже есть имя.
        return "you alrady login!"
    else:
        return 0 # Если имени нет.
    file.close()

def File(text):
    file = open("memory.txt", "a", encoding="UTF-8")
    file.write(str(text)+"\n") # Запиши текст и перейди на новую строку.
    file.close()
els = 0
def MarkPl(list,listM,els):
    timeL = "" # Собираем последовательность ответов.
    for i in list:
        mark = input("Оцените пожалуйста " + str(i) + ":    ")
        if int(mark) <= 5 and int(mark) >= 1:
            timeL += (mark)
        else:
            els += 1
            print("Введите корректное число!")
            exit(0)
    listM.append(timeL) # Добавь ответы в список.

#-------------------- Куча переменных. Ужас! ---------------------------------------------------------------
list = ""
genre = ["Ужасы","Мистерия","Боевик","Комедия","Фантастика","Драма"]
listM = []
horrors = ["Оцепеневшие от страха","ОНО","ОНО 2","Детские игры","Детские игры 2","Детские игры 3","Невеста Чаки","Потомство Чаки","Проклятье Чаки","Культ Чаки","Синистер","Астрал","Заклятье"]
horrorsM = []

i = 0
o = 0
k = []
newK = []
newK1 = []
j = 1
nameK = 0
nameL = []
markL = []
markH = []
far = []
value = []
valueId = []
idel = []
idelM = []
idelF = []
#-------------------- Куча переменных. Ужас! ---------------------------------------------------------------

name = input("Пожалуйста введите ваше имя:   ") # В качестве примера мы используем имена, однако в настоящей программе следует использовать id.
if Log(name) == 0: # Если вы не зарегистрированные.
    print("Пожалуйста поставьте оценку от 1 до 5.")
    MarkPl(genre,listM,els) # Обработай все ответы и запиши в listM. listM - list Marks.
    print("Пожалуйста оцените фильмы ужасов которые знаете. 1 до 5.") # Следует выбрать жанры с наивысшей оценкой. Однако в качестве примера выберем Ужасы.
    MarkPl(horrors,horrorsM,els) # Обработай все ответы и запиши в horrorsM. horrorsM - horrors Marks.

    if els != 1:
        File("@"+name)  # Узнать имя и добавить данные с оценками
        File(str(listM)[2:-2]) # Запиши все ответы в файл (убери все черточки и кавычки).
        File(str(horrorsM)[2:-2]) # Запиши все ответы в файл (убери все черточки и кавычки).

file = open("memory.txt","r",encoding="UTF-8")
reader = file.read()
if reader.count("\n") >= 9: # Если зарегистрированных пользователей больше 3х.
    while i != len(reader):
        if reader[i] != "\n": # Запишем каждый столбец по отдельности в временный список.
            list += reader[i]
        else:
            if j%3 == 1: # Запиши каждый первый из трех столбцов.
                nameL.append(list)
            if j%3 == 2: # Запиши каждый второй из трех столбцов.
                markL.append(list)
            if j%3 == 0: # Запиши каждый третий из трех столбцов.
                markH.append(list)
            list = "" # Обновим столбец.
            j += 1
        i += 1

    j = 0
    for i in nameL:
        if i == "@"+name: # Ищем имя пользователя и добавляем его айди. (то каким по счету он в файле).
            id = j
        j += 1

    Arithmetic(markL,nameK) # Находим среднее арифметическое пользователей по жанру.

    Sr() # Находим коефицент по жанру.

    Value(markL) # Находим расстояние по жанру.

    NowIdel = Idel() # Вычисляем пользователя с схожими интересами по жанру.

    print("Вам могут понравиться эти фильмы:    ")
    for i in idelF: # Порекомендуй фильмы с понравившиеся втором пользователю.
        print("    " + horrors[i])
# Обнулим все результаты --------------------------------------------------------------
    k = []
    nameK = 0
    value = []
    valueId = []
    newK = []
    newK1 = []
    idel = []
    idelM = []
    idelF = []
# Обнулим все результаты --------------------------------------------------------------
    Arithmetic(markH, nameK) # Находим среднее арифметическое пользователей по оценкам фильмов.

    Sr()# Находим коефицент по оценкам фильмов.

    Value(markH) # Находим расстояние по оценкам фильмов.

    Idel() # Вычисляем пользователя с схожими интересами по оценкам фильмов.

    if NowIdel != Idel(): # Если пользователь с схожими интересами не один и тот же человек.
        print("Вам могут понравиться эти фильмы:    ")
        for i in idelF:  # Порекомендуй фильмы с понравившиеся втором пользователю.
            print("    " + horrors[i])

    file.close()
else:
    print("В приложении недостаточно пользователей, зарегистрируйте более 2х человек!")
